// <auto-generated />
using BackEnd_SolucionesInterPaisa.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEnd_SolucionesInterPaisa.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BackEnd_SolucionesInterPaisa.Models.PlanesFichas", b =>
                {
                    b.Property<string>("idProfile")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("addMacCookieProfile")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("addressPoolProfile")
                        .HasColumnType("longtext");

                    b.Property<string>("limiteDeTiempoProfile")
                        .HasColumnType("longtext");

                    b.Property<string>("nameProfile")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("onLoginProfile")
                        .HasColumnType("longtext");

                    b.Property<string>("onLogoutProfile")
                        .HasColumnType("longtext");

                    b.Property<string>("tipoDeFichas")
                        .HasColumnType("longtext");

                    b.Property<string>("velocidadSubidaBajadaProfile")
                        .HasColumnType("longtext");

                    b.HasKey("idProfile");

                    b.ToTable("PlanesFichas");
                });

            modelBuilder.Entity("BackEnd_SolucionesInterPaisa.Models.RoutersFichas", b =>
                {
                    b.Property<int>("idMikrotik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BoardName")
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentFirmware")
                        .HasColumnType("longtext");

                    b.Property<string>("FactoryFirmware")
                        .HasColumnType("longtext");

                    b.Property<string>("FirmwareType")
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<bool>("Routerboard")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("UpgradeFirmware")
                        .HasColumnType("longtext");

                    b.Property<string>("direccionIPMKT")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("estadoMKT")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("idCliente")
                        .HasColumnType("int");

                    b.Property<string>("ordenMKT")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("passwordIPMKT")
                        .HasColumnType("longtext");

                    b.Property<string>("usuarioIPMKT")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("idMikrotik");

                    b.ToTable("RoutersFichas");
                });

            modelBuilder.Entity("BackEnd_SolucionesInterPaisa.Models.UsuariosCreadosHotspot", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("LongitudUserFichas")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("longtext");

                    b.Property<long>("bytesIn")
                        .HasColumnType("bigint");

                    b.Property<long>("bytesOut")
                        .HasColumnType("bigint");

                    b.Property<string>("cantidadfichas")
                        .HasColumnType("longtext");

                    b.Property<string>("comment")
                        .HasColumnType("longtext");

                    b.Property<bool>("disabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("fechaCreacion")
                        .HasColumnType("longtext");

                    b.Property<string>("id_Cliente")
                        .HasColumnType("longtext");

                    b.Property<string>("id_Mikrotik")
                        .HasColumnType("longtext");

                    b.Property<string>("id_vendedor")
                        .HasColumnType("longtext");

                    b.Property<long>("limitBytesIn")
                        .HasColumnType("bigint");

                    b.Property<long>("limitBytesOut")
                        .HasColumnType("bigint");

                    b.Property<int>("limitBytesTotal")
                        .HasColumnType("int");

                    b.Property<string>("limitUptime")
                        .HasColumnType("longtext");

                    b.Property<string>("macAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<long>("packetsIn")
                        .HasColumnType("bigint");

                    b.Property<long>("packetsOut")
                        .HasColumnType("bigint");

                    b.Property<string>("password")
                        .HasColumnType("longtext");

                    b.Property<string>("planesFichas")
                        .HasColumnType("longtext");

                    b.Property<string>("prefijoFichas")
                        .HasColumnType("longtext");

                    b.Property<string>("profile")
                        .HasColumnType("longtext");

                    b.Property<string>("routes")
                        .HasColumnType("longtext");

                    b.Property<string>("server")
                        .HasColumnType("longtext");

                    b.Property<string>("servidorHotspot")
                        .HasColumnType("longtext");

                    b.Property<string>("tipoInicioDeSesionFichas")
                        .HasColumnType("longtext");

                    b.Property<string>("tipoPasswordGenerarFichas")
                        .HasColumnType("longtext");

                    b.Property<string>("tipoUsuarioGenerarFichas")
                        .HasColumnType("longtext");

                    b.Property<string>("uptime")
                        .HasColumnType("longtext");

                    b.Property<int>("valorLongPassFichas")
                        .HasColumnType("int");

                    b.Property<string>("vendedorFichas")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("UsuariosCreadosHotspot");
                });
#pragma warning restore 612, 618
        }
    }
}
